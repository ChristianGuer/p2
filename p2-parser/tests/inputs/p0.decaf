// CS 432 PROJECT 0: DECAF PROGRAMMING
//I used Ai to explain the triangle drawing and gcd functions.
int nums[100];


def int fact(int n)
{

    if( n <= 1){
        return 1;
    }
    return n * fact( n - 1);
}

def int fib(int n)  
{
    if(n <= 0){
        return 0;
    }
    if(n == 1){
        return 1;
    }
    return fib(n - 1) + fib(n - 2);
}

def bool is_prime(int n)
{
    int half_n;
    half_n = n /2 + 1;

    if (n <= 1){
        return false;
    }
    while (half_n > 1){
        if( n % half_n == 0){
            return false;
        }
        half_n = half_n - 1;
    }
    return true;
}

def int gcd(int a, int b)
{
    int temp;
    while (b!=0){
        temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}


def int sum_nums(int len)
{
    int total;
    total = 0;
    if (len <= 0){
        return 0;
    }
    while (len > 0){
        total = total + nums[len - 1];
        len = len - 1;
    }
    return total;
}

def void sort_nums(int len)
{
    int temp;
    if(len < 1){
        return;
    }
    sort_nums(len - 1);
    
    while(len >= 1 && nums[len] < nums[len - 1]){
        temp = nums[len];
        nums[len] = nums[len - 1];
        nums[len - 1] = temp;
        len = len - 1;
    }
    return;
}


def void draw_triangle(int base)
{
    int row;
    int space;
    int star;
    row = 0;
    while (row < base){
        space = base - row - 1;
        while (space > 0){
            print_str(" ");
            space = space - 1;
        }
        star = 0;
        while (star < (2 * row + 1)){
            print_str("*");
            star = star + 1;
        }
        print_str("\n");
        row = row + 1;
    }
    return;
}


def void test_fact(int a, int correct)
{
    int f;
    f = fact(a);
    print_int(f);
    if (f != correct) {
        print_str(" INCORRECT!");
    }
    print_str("\n");
    return;
}

def void test_prime(int a, bool correct)
{
    bool p;
    p = is_prime(a);
    print_bool(p);
    if (p != correct) {
        print_str(" INCORRECT!");
    }
    print_str("\n");
    return;
}

def void test_gcd(int a, int b, int correct)
{
    int g;
    g = gcd(a, b);
    print_int(g);
    if (g != correct) {
        print_str(" INCORRECT!");
    }
    print_str("\n");
    return;
}
def void test_sum(int len, int correct)
{
    int sum;
    nums[0] = 5;
    nums[1] = 3;
    nums[2] = 8;
    nums[3] = 1;
    nums[4] = 4;
    
    sum = sum_nums(len);
    print_int(sum);
    if (sum != correct) {
        print_str(" INCORRECT!");
    }
    print_str("\n");
    return;
}

def void test_sort(int len)
{   
    int start;
    nums[0] = 5;
    nums[1] = 3;
    nums[2] = 8;
    nums[3] = 1;
    nums[4] = 4;
    start = 0;
    
    print_str("Unsorted: ");
    while(start < len){
        print_int(nums[start]);
        print_str(" ");
        start = start + 1;
    }
    print_str("\n");
    start = 0;
    
    sort_nums(len);
    
    print_str("Sorted: ");
    while(start < len){
        print_int(nums[start]);
        print_str(" ");
        start = start + 1;
    }
    print_str("\n");

    return;
}


def int main()
{
    test_fact(5, 120);
    test_fact(0, 1);

    test_prime(1, false);
    test_prime(7, true);
    test_prime(8, false);
    test_prime(100, false);

    test_gcd(10, 15, 5);
    test_gcd(17, 13, 1);
    test_gcd(100, 25, 25);

    test_sum(5, 21);
    test_sum(0,0);

    test_sort(4);
    draw_triangle(100);
    return 0;
}
